{
  "swagger": "2.0",
  "host": "quickeats:8000",
  "basePath": "/api/",
  "info": {
    "version": "1.0.0",
    "title": "Simple API",
    "description": "A simple API to learn how to write OpenAPI Specification"
  },
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://auth.ibtspl.com/oauth2/",
      "flow": "password",
      "scopes": {
        "read": "Read user details",
        "write": "Create users",
        "update": "Update users",
        "delete": "Delete users",
        "superuser": "Super user permissions"
      },
      "type": "oauth2"
    }
  },
  "definitions": {
    "UserAccount": {
      "type": "object",
      "properties": {
        "user_name": {
          "type": "string"
        },
        "mail_id": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "user_name",
        "mail_id",
        "password"
      ]
    },
    "SigninUser": {
      "type": "object",
      "properties": {
        "user_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "user_name",
        "password"
      ]
    },
    "GetUserProfile": {
      "type": "object",
      "properties": {
        "user_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "vendor",
            "student",
            "employee"
          ]
        }
      },
      "required": [
        "user_name",
        "phone_number",
        "profile_pic",
        "email",
        "role"
      ]
    },
    "CreateNewUserResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "expires_in": {
          "type": "string"
        },
        "token_type": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      },
      "required": [
        "access_token",
        "expires_in",
        "token_type",
        "scope",
        "refresh_token"
      ]
    },
    "ProfileErrorResponse": {
      "type": "object",
      "properties": {
        "error_message": {
          "type": "string",
          "description": "Description of the error"
        },
        "error_enum": {
          "type": "string",
          "enum": [
            "USER_NAME_ALREADY_EXIST",
            "INVALID_USER_NAME",
            "INVALID_URL",
            "INVALID_EMAIL_FORMAT"
          ]
        }
      },
      "required": [
        "error_message"
      ]
    },
    "GetUserRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "vendor",
            "student",
            "employee"
          ]
        }
      },
      "required": [
        "role"
      ]
    },
    "SigninUserResponse": {
      "type": "object",
      "properties": {
        "user_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "user_name",
        "password"
      ]
    }
  },
  "parameters": {
    "CreateNewUserParameter": {
      "name": "User",
      "in": "body",
      "description": "The User to create.",
      "schema": {
        "$ref": "#/definitions/UserAccount"
      }
    },
    "SigninUserParameter": {
      "name": "User",
      "in": "body",
      "description": "Sign in the user.",
      "schema": {
        "$ref": "#/definitions/SigninUser"
      }
    }
  },
  "paths": {
    "/create/user/v1/": {
      "post": {
        "operationId": "create_user",
        "summary": "Create New User",
        "description": "Creates a new user and returns the user object. This API is not idempotent.",
        "security": [],
        "parameters": [
          {
            "$ref": "#/parameters/CreateNewUserParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/CreateNewUserResponse"
            }
          }
        }
      }
    },
    "/signin/user/v1/": {
      "post": {
        "operationId": "signin_user",
        "summary": "Sign In User",
        "description": "Signs in a user and returns the user object. This API is not idempotent.",
        "security": [],
        "parameters": [
          {
            "$ref": "#/parameters/SigninUserParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "User signed in successfully",
            "schema": {
              "$ref": "#/definitions/CreateNewUserResponse"
            }
          }
        }
      }
    },
    "/get/user/profile/v1": {
      "get": {
        "operationId": "get_user_profile",
        "summary": "Get User Profile Details",
        "description": "Fetches the profile of the user based on the access token, including the role.",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "schema": {
              "$ref": "#/definitions/GetUserProfile"
            }
          }
        }
      }
    }
  }
}
